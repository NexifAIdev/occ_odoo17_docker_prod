# ========================================
# CI/CD: Auto-deploy to DigitalOcean via SSH and Docker Compose
# Triggered on push to main branch
# ========================================

name: CI/CD Deploy to DigitalOcean

on:
  push:
    branches:
      - main  # Trigger only when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -----------------------------------
      # Step 1: Checkout latest code
      # -----------------------------------
      - name: üì• Checkout source code
        uses: actions/checkout@v3

      # -----------------------------------
      # Step 2: Detect what files changed
      # Sets environment variables:
      #   - docker_changed=true/false
      #   - custom_addons_changed=true/false
      # -----------------------------------
      - name: üîé Determine changed files
        id: changes
        run: |
          # Check for Docker-related changes (docker-compose, Dockerfile, tomcat config)
          DOCKER_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep -E "docker-compose\.yml|Dockerfile|tomcat/" || true)

          # Check for changes in custom addons
          CUSTOM_ADDONS_CHANGED=$(git diff --name-only HEAD~1 HEAD | grep -E "odoo/addons/custom" || true)

          # Set GitHub Actions environment variables
          echo "docker_changed=${DOCKER_CHANGED:+true}" >> $GITHUB_ENV
          echo "custom_addons_changed=${CUSTOM_ADDONS_CHANGED:+true}" >> $GITHUB_ENV

      # -----------------------------------
      # Step 3: Copy updated project files to the DigitalOcean server
      # -----------------------------------
      - name: üì¶ Copy files to DigitalOcean server
        uses: appleboy/scp-action@master
        with:
          host: 206.189.239.195
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH key stored in GitHub secrets
          source: "."  # Copy all project files
          target: "/root/occ_odoo17_docker"  # Target directory on server

      # -----------------------------------
      # Step 4: SSH into server and perform conditional deployment
      #   - If Docker files changed: full rebuild
      #   - If only Odoo custom addons changed: update all DBs
      #   - Else: no action needed
      # -----------------------------------
      - name: üîÅ Conditional Deploy on Server
        uses: appleboy/ssh-action@master
        with:
          host: 206.189.239.195
          username: root
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            echo "üìÇ Fixing filestore permissions..."
            cd /root/occ_odoo17_docker
            mkdir -p ./filestore
            chown -R 1000:1000 ./filestore
            chmod -R 777 ./filestore

            # Full rebuild if any Docker-related files changed
            if [ "${{ env.docker_changed }}" = "true" ]; then
              echo "üöÄ Docker-related changes found ‚Üí Rebuilding all containers..."
              docker compose down -v
              docker compose up -d --build

            # Update Odoo DBs if only custom addons changed
            elif [ "${{ env.custom_addons_changed }}" = "true" ]; then
              echo "‚ôªÔ∏è Custom addons changed ‚Üí Upgrading all databases..."
              for db in $(docker exec occ-odoo17-web-prod odoo --list-db); do
                echo "üîÑ Upgrading database: $db"
                docker exec occ-odoo17-web-prod odoo -d "$db" -u all --stop-after-init || true
              done

            # No changes that require redeploying
            else
              echo "‚úÖ No relevant changes. Deployment skipped."
            fi